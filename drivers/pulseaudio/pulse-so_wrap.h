// This file is generated. Do not edit!
// see https://github.com/hpvb/dynload-wrapper for details
// generated by /home/hp/Projects/godot/pulse/generate-wrapper.py 0.1 on 2021-02-16 20:26:38
// flags: /home/hp/Projects/godot/pulse/generate-wrapper.py --include /usr/include/pulse/pulseaudio.h --sys-include <pulse/pulseaudio.h> --soname libpulse.so.0 --omit-prefix _pa_ --init-name pulse --output-header pulse-so_wrap.h --output-implementation pulse-so_wrap.c
//
#include <dlfcn.h>
#include <stdio.h>
#define pa_get_library_version pa_get_library_version_orig
#define pa_bytes_per_second pa_bytes_per_second_orig
#define pa_frame_size pa_frame_size_orig
#define pa_sample_size pa_sample_size_orig
#define pa_sample_size_of_format pa_sample_size_of_format_orig
#define pa_bytes_to_usec pa_bytes_to_usec_orig
#define pa_usec_to_bytes pa_usec_to_bytes_orig
#define pa_sample_spec_init pa_sample_spec_init_orig
#define pa_sample_format_valid pa_sample_format_valid_orig
#define pa_sample_rate_valid pa_sample_rate_valid_orig
#define pa_channels_valid pa_channels_valid_orig
#define pa_sample_spec_valid pa_sample_spec_valid_orig
#define pa_sample_spec_equal pa_sample_spec_equal_orig
#define pa_sample_format_to_string pa_sample_format_to_string_orig
#define pa_parse_sample_format pa_parse_sample_format_orig
#define pa_sample_spec_snprint pa_sample_spec_snprint_orig
#define pa_bytes_snprint pa_bytes_snprint_orig
#define pa_sample_format_is_le pa_sample_format_is_le_orig
#define pa_sample_format_is_be pa_sample_format_is_be_orig
#define pa_direction_valid pa_direction_valid_orig
#define pa_direction_to_string pa_direction_to_string_orig
#define pa_mainloop_api_once pa_mainloop_api_once_orig
#define pa_proplist_new pa_proplist_new_orig
#define pa_proplist_free pa_proplist_free_orig
#define pa_proplist_key_valid pa_proplist_key_valid_orig
#define pa_proplist_sets pa_proplist_sets_orig
#define pa_proplist_setp pa_proplist_setp_orig
#define pa_proplist_setf pa_proplist_setf_orig
#define pa_proplist_set pa_proplist_set_orig
#define pa_proplist_gets pa_proplist_gets_orig
#define pa_proplist_get pa_proplist_get_orig
#define pa_proplist_update pa_proplist_update_orig
#define pa_proplist_unset pa_proplist_unset_orig
#define pa_proplist_unset_many pa_proplist_unset_many_orig
#define pa_proplist_iterate pa_proplist_iterate_orig
#define pa_proplist_to_string pa_proplist_to_string_orig
#define pa_proplist_to_string_sep pa_proplist_to_string_sep_orig
#define pa_proplist_from_string pa_proplist_from_string_orig
#define pa_proplist_contains pa_proplist_contains_orig
#define pa_proplist_clear pa_proplist_clear_orig
#define pa_proplist_copy pa_proplist_copy_orig
#define pa_proplist_size pa_proplist_size_orig
#define pa_proplist_isempty pa_proplist_isempty_orig
#define pa_proplist_equal pa_proplist_equal_orig
#define pa_channel_map_init pa_channel_map_init_orig
#define pa_channel_map_init_mono pa_channel_map_init_mono_orig
#define pa_channel_map_init_stereo pa_channel_map_init_stereo_orig
#define pa_channel_map_init_auto pa_channel_map_init_auto_orig
#define pa_channel_map_init_extend pa_channel_map_init_extend_orig
#define pa_channel_position_to_string pa_channel_position_to_string_orig
#define pa_channel_position_from_string pa_channel_position_from_string_orig
#define pa_channel_position_to_pretty_string pa_channel_position_to_pretty_string_orig
#define pa_channel_map_snprint pa_channel_map_snprint_orig
#define pa_channel_map_parse pa_channel_map_parse_orig
#define pa_channel_map_equal pa_channel_map_equal_orig
#define pa_channel_map_valid pa_channel_map_valid_orig
#define pa_channel_map_compatible pa_channel_map_compatible_orig
#define pa_channel_map_superset pa_channel_map_superset_orig
#define pa_channel_map_can_balance pa_channel_map_can_balance_orig
#define pa_channel_map_can_fade pa_channel_map_can_fade_orig
#define pa_channel_map_can_lfe_balance pa_channel_map_can_lfe_balance_orig
#define pa_channel_map_to_name pa_channel_map_to_name_orig
#define pa_channel_map_to_pretty_name pa_channel_map_to_pretty_name_orig
#define pa_channel_map_has_position pa_channel_map_has_position_orig
#define pa_channel_map_mask pa_channel_map_mask_orig
#define pa_encoding_to_string pa_encoding_to_string_orig
#define pa_encoding_from_string pa_encoding_from_string_orig
#define pa_format_info_new pa_format_info_new_orig
#define pa_format_info_copy pa_format_info_copy_orig
#define pa_format_info_free pa_format_info_free_orig
#define pa_format_info_valid pa_format_info_valid_orig
#define pa_format_info_is_pcm pa_format_info_is_pcm_orig
#define pa_format_info_is_compatible pa_format_info_is_compatible_orig
#define pa_format_info_snprint pa_format_info_snprint_orig
#define pa_format_info_from_string pa_format_info_from_string_orig
#define pa_format_info_from_sample_spec pa_format_info_from_sample_spec_orig
#define pa_format_info_to_sample_spec pa_format_info_to_sample_spec_orig
#define pa_format_info_get_prop_type pa_format_info_get_prop_type_orig
#define pa_format_info_get_prop_int pa_format_info_get_prop_int_orig
#define pa_format_info_get_prop_int_range pa_format_info_get_prop_int_range_orig
#define pa_format_info_get_prop_int_array pa_format_info_get_prop_int_array_orig
#define pa_format_info_get_prop_string pa_format_info_get_prop_string_orig
#define pa_format_info_get_prop_string_array pa_format_info_get_prop_string_array_orig
#define pa_format_info_free_string_array pa_format_info_free_string_array_orig
#define pa_format_info_get_sample_format pa_format_info_get_sample_format_orig
#define pa_format_info_get_rate pa_format_info_get_rate_orig
#define pa_format_info_get_channels pa_format_info_get_channels_orig
#define pa_format_info_get_channel_map pa_format_info_get_channel_map_orig
#define pa_format_info_set_prop_int pa_format_info_set_prop_int_orig
#define pa_format_info_set_prop_int_array pa_format_info_set_prop_int_array_orig
#define pa_format_info_set_prop_int_range pa_format_info_set_prop_int_range_orig
#define pa_format_info_set_prop_string pa_format_info_set_prop_string_orig
#define pa_format_info_set_prop_string_array pa_format_info_set_prop_string_array_orig
#define pa_format_info_set_sample_format pa_format_info_set_sample_format_orig
#define pa_format_info_set_rate pa_format_info_set_rate_orig
#define pa_format_info_set_channels pa_format_info_set_channels_orig
#define pa_format_info_set_channel_map pa_format_info_set_channel_map_orig
#define pa_operation_ref pa_operation_ref_orig
#define pa_operation_unref pa_operation_unref_orig
#define pa_operation_cancel pa_operation_cancel_orig
#define pa_operation_get_state pa_operation_get_state_orig
#define pa_operation_set_state_callback pa_operation_set_state_callback_orig
#define pa_context_new pa_context_new_orig
#define pa_context_new_with_proplist pa_context_new_with_proplist_orig
#define pa_context_unref pa_context_unref_orig
#define pa_context_ref pa_context_ref_orig
#define pa_context_set_state_callback pa_context_set_state_callback_orig
#define pa_context_set_event_callback pa_context_set_event_callback_orig
#define pa_context_errno pa_context_errno_orig
#define pa_context_is_pending pa_context_is_pending_orig
#define pa_context_get_state pa_context_get_state_orig
#define pa_context_connect pa_context_connect_orig
#define pa_context_disconnect pa_context_disconnect_orig
#define pa_context_drain pa_context_drain_orig
#define pa_context_exit_daemon pa_context_exit_daemon_orig
#define pa_context_set_default_sink pa_context_set_default_sink_orig
#define pa_context_set_default_source pa_context_set_default_source_orig
#define pa_context_is_local pa_context_is_local_orig
#define pa_context_set_name pa_context_set_name_orig
#define pa_context_get_server pa_context_get_server_orig
#define pa_context_get_protocol_version pa_context_get_protocol_version_orig
#define pa_context_get_server_protocol_version pa_context_get_server_protocol_version_orig
#define pa_context_proplist_update pa_context_proplist_update_orig
#define pa_context_proplist_remove pa_context_proplist_remove_orig
#define pa_context_get_index pa_context_get_index_orig
#define pa_context_rttime_new pa_context_rttime_new_orig
#define pa_context_rttime_restart pa_context_rttime_restart_orig
#define pa_context_get_tile_size pa_context_get_tile_size_orig
#define pa_context_load_cookie_from_file pa_context_load_cookie_from_file_orig
#define pa_cvolume_equal pa_cvolume_equal_orig
#define pa_cvolume_init pa_cvolume_init_orig
#define pa_cvolume_set pa_cvolume_set_orig
#define pa_cvolume_snprint pa_cvolume_snprint_orig
#define pa_sw_cvolume_snprint_dB pa_sw_cvolume_snprint_dB_orig
#define pa_cvolume_snprint_verbose pa_cvolume_snprint_verbose_orig
#define pa_volume_snprint pa_volume_snprint_orig
#define pa_sw_volume_snprint_dB pa_sw_volume_snprint_dB_orig
#define pa_volume_snprint_verbose pa_volume_snprint_verbose_orig
#define pa_cvolume_avg pa_cvolume_avg_orig
#define pa_cvolume_avg_mask pa_cvolume_avg_mask_orig
#define pa_cvolume_max pa_cvolume_max_orig
#define pa_cvolume_max_mask pa_cvolume_max_mask_orig
#define pa_cvolume_min pa_cvolume_min_orig
#define pa_cvolume_min_mask pa_cvolume_min_mask_orig
#define pa_cvolume_valid pa_cvolume_valid_orig
#define pa_cvolume_channels_equal_to pa_cvolume_channels_equal_to_orig
#define pa_sw_volume_multiply pa_sw_volume_multiply_orig
#define pa_sw_cvolume_multiply pa_sw_cvolume_multiply_orig
#define pa_sw_cvolume_multiply_scalar pa_sw_cvolume_multiply_scalar_orig
#define pa_sw_volume_divide pa_sw_volume_divide_orig
#define pa_sw_cvolume_divide pa_sw_cvolume_divide_orig
#define pa_sw_cvolume_divide_scalar pa_sw_cvolume_divide_scalar_orig
#define pa_sw_volume_from_dB pa_sw_volume_from_dB_orig
#define pa_sw_volume_to_dB pa_sw_volume_to_dB_orig
#define pa_sw_volume_from_linear pa_sw_volume_from_linear_orig
#define pa_sw_volume_to_linear pa_sw_volume_to_linear_orig
#define pa_cvolume_remap pa_cvolume_remap_orig
#define pa_cvolume_compatible pa_cvolume_compatible_orig
#define pa_cvolume_compatible_with_channel_map pa_cvolume_compatible_with_channel_map_orig
#define pa_cvolume_get_balance pa_cvolume_get_balance_orig
#define pa_cvolume_set_balance pa_cvolume_set_balance_orig
#define pa_cvolume_get_fade pa_cvolume_get_fade_orig
#define pa_cvolume_set_fade pa_cvolume_set_fade_orig
#define pa_cvolume_get_lfe_balance pa_cvolume_get_lfe_balance_orig
#define pa_cvolume_set_lfe_balance pa_cvolume_set_lfe_balance_orig
#define pa_cvolume_scale pa_cvolume_scale_orig
#define pa_cvolume_scale_mask pa_cvolume_scale_mask_orig
#define pa_cvolume_set_position pa_cvolume_set_position_orig
#define pa_cvolume_get_position pa_cvolume_get_position_orig
#define pa_cvolume_merge pa_cvolume_merge_orig
#define pa_cvolume_inc_clamp pa_cvolume_inc_clamp_orig
#define pa_cvolume_inc pa_cvolume_inc_orig
#define pa_cvolume_dec pa_cvolume_dec_orig
#define pa_stream_new pa_stream_new_orig
#define pa_stream_new_with_proplist pa_stream_new_with_proplist_orig
#define pa_stream_new_extended pa_stream_new_extended_orig
#define pa_stream_unref pa_stream_unref_orig
#define pa_stream_ref pa_stream_ref_orig
#define pa_stream_get_state pa_stream_get_state_orig
#define pa_stream_get_context pa_stream_get_context_orig
#define pa_stream_get_index pa_stream_get_index_orig
#define pa_stream_get_device_index pa_stream_get_device_index_orig
#define pa_stream_get_device_name pa_stream_get_device_name_orig
#define pa_stream_is_suspended pa_stream_is_suspended_orig
#define pa_stream_is_corked pa_stream_is_corked_orig
#define pa_stream_connect_playback pa_stream_connect_playback_orig
#define pa_stream_connect_record pa_stream_connect_record_orig
#define pa_stream_disconnect pa_stream_disconnect_orig
#define pa_stream_begin_write pa_stream_begin_write_orig
#define pa_stream_cancel_write pa_stream_cancel_write_orig
#define pa_stream_write pa_stream_write_orig
#define pa_stream_write_ext_free pa_stream_write_ext_free_orig
#define pa_stream_peek pa_stream_peek_orig
#define pa_stream_drop pa_stream_drop_orig
#define pa_stream_writable_size pa_stream_writable_size_orig
#define pa_stream_readable_size pa_stream_readable_size_orig
#define pa_stream_drain pa_stream_drain_orig
#define pa_stream_update_timing_info pa_stream_update_timing_info_orig
#define pa_stream_set_state_callback pa_stream_set_state_callback_orig
#define pa_stream_set_write_callback pa_stream_set_write_callback_orig
#define pa_stream_set_read_callback pa_stream_set_read_callback_orig
#define pa_stream_set_overflow_callback pa_stream_set_overflow_callback_orig
#define pa_stream_get_underflow_index pa_stream_get_underflow_index_orig
#define pa_stream_set_underflow_callback pa_stream_set_underflow_callback_orig
#define pa_stream_set_started_callback pa_stream_set_started_callback_orig
#define pa_stream_set_latency_update_callback pa_stream_set_latency_update_callback_orig
#define pa_stream_set_moved_callback pa_stream_set_moved_callback_orig
#define pa_stream_set_suspended_callback pa_stream_set_suspended_callback_orig
#define pa_stream_set_event_callback pa_stream_set_event_callback_orig
#define pa_stream_set_buffer_attr_callback pa_stream_set_buffer_attr_callback_orig
#define pa_stream_cork pa_stream_cork_orig
#define pa_stream_flush pa_stream_flush_orig
#define pa_stream_prebuf pa_stream_prebuf_orig
#define pa_stream_trigger pa_stream_trigger_orig
#define pa_stream_set_name pa_stream_set_name_orig
#define pa_stream_get_time pa_stream_get_time_orig
#define pa_stream_get_latency pa_stream_get_latency_orig
#define pa_stream_get_timing_info pa_stream_get_timing_info_orig
#define pa_stream_get_sample_spec pa_stream_get_sample_spec_orig
#define pa_stream_get_channel_map pa_stream_get_channel_map_orig
#define pa_stream_get_format_info pa_stream_get_format_info_orig
#define pa_stream_get_buffer_attr pa_stream_get_buffer_attr_orig
#define pa_stream_set_buffer_attr pa_stream_set_buffer_attr_orig
#define pa_stream_update_sample_rate pa_stream_update_sample_rate_orig
#define pa_stream_proplist_update pa_stream_proplist_update_orig
#define pa_stream_proplist_remove pa_stream_proplist_remove_orig
#define pa_stream_set_monitor_stream pa_stream_set_monitor_stream_orig
#define pa_stream_get_monitor_stream pa_stream_get_monitor_stream_orig
#define pa_context_get_sink_info_by_name pa_context_get_sink_info_by_name_orig
#define pa_context_get_sink_info_by_index pa_context_get_sink_info_by_index_orig
#define pa_context_get_sink_info_list pa_context_get_sink_info_list_orig
#define pa_context_set_sink_volume_by_index pa_context_set_sink_volume_by_index_orig
#define pa_context_set_sink_volume_by_name pa_context_set_sink_volume_by_name_orig
#define pa_context_set_sink_mute_by_index pa_context_set_sink_mute_by_index_orig
#define pa_context_set_sink_mute_by_name pa_context_set_sink_mute_by_name_orig
#define pa_context_suspend_sink_by_name pa_context_suspend_sink_by_name_orig
#define pa_context_suspend_sink_by_index pa_context_suspend_sink_by_index_orig
#define pa_context_set_sink_port_by_index pa_context_set_sink_port_by_index_orig
#define pa_context_set_sink_port_by_name pa_context_set_sink_port_by_name_orig
#define pa_context_get_source_info_by_name pa_context_get_source_info_by_name_orig
#define pa_context_get_source_info_by_index pa_context_get_source_info_by_index_orig
#define pa_context_get_source_info_list pa_context_get_source_info_list_orig
#define pa_context_set_source_volume_by_index pa_context_set_source_volume_by_index_orig
#define pa_context_set_source_volume_by_name pa_context_set_source_volume_by_name_orig
#define pa_context_set_source_mute_by_index pa_context_set_source_mute_by_index_orig
#define pa_context_set_source_mute_by_name pa_context_set_source_mute_by_name_orig
#define pa_context_suspend_source_by_name pa_context_suspend_source_by_name_orig
#define pa_context_suspend_source_by_index pa_context_suspend_source_by_index_orig
#define pa_context_set_source_port_by_index pa_context_set_source_port_by_index_orig
#define pa_context_set_source_port_by_name pa_context_set_source_port_by_name_orig
#define pa_context_get_server_info pa_context_get_server_info_orig
#define pa_context_get_module_info pa_context_get_module_info_orig
#define pa_context_get_module_info_list pa_context_get_module_info_list_orig
#define pa_context_load_module pa_context_load_module_orig
#define pa_context_unload_module pa_context_unload_module_orig
#define pa_context_get_client_info pa_context_get_client_info_orig
#define pa_context_get_client_info_list pa_context_get_client_info_list_orig
#define pa_context_kill_client pa_context_kill_client_orig
#define pa_context_get_card_info_by_index pa_context_get_card_info_by_index_orig
#define pa_context_get_card_info_by_name pa_context_get_card_info_by_name_orig
#define pa_context_get_card_info_list pa_context_get_card_info_list_orig
#define pa_context_set_card_profile_by_index pa_context_set_card_profile_by_index_orig
#define pa_context_set_card_profile_by_name pa_context_set_card_profile_by_name_orig
#define pa_context_set_port_latency_offset pa_context_set_port_latency_offset_orig
#define pa_context_get_sink_input_info pa_context_get_sink_input_info_orig
#define pa_context_get_sink_input_info_list pa_context_get_sink_input_info_list_orig
#define pa_context_move_sink_input_by_name pa_context_move_sink_input_by_name_orig
#define pa_context_move_sink_input_by_index pa_context_move_sink_input_by_index_orig
#define pa_context_set_sink_input_volume pa_context_set_sink_input_volume_orig
#define pa_context_set_sink_input_mute pa_context_set_sink_input_mute_orig
#define pa_context_kill_sink_input pa_context_kill_sink_input_orig
#define pa_context_get_source_output_info pa_context_get_source_output_info_orig
#define pa_context_get_source_output_info_list pa_context_get_source_output_info_list_orig
#define pa_context_move_source_output_by_name pa_context_move_source_output_by_name_orig
#define pa_context_move_source_output_by_index pa_context_move_source_output_by_index_orig
#define pa_context_set_source_output_volume pa_context_set_source_output_volume_orig
#define pa_context_set_source_output_mute pa_context_set_source_output_mute_orig
#define pa_context_kill_source_output pa_context_kill_source_output_orig
#define pa_context_stat pa_context_stat_orig
#define pa_context_get_sample_info_by_name pa_context_get_sample_info_by_name_orig
#define pa_context_get_sample_info_by_index pa_context_get_sample_info_by_index_orig
#define pa_context_get_sample_info_list pa_context_get_sample_info_list_orig
#define pa_context_get_autoload_info_by_name pa_context_get_autoload_info_by_name_orig
#define pa_context_get_autoload_info_by_index pa_context_get_autoload_info_by_index_orig
#define pa_context_get_autoload_info_list pa_context_get_autoload_info_list_orig
#define pa_context_add_autoload pa_context_add_autoload_orig
#define pa_context_remove_autoload_by_name pa_context_remove_autoload_by_name_orig
#define pa_context_remove_autoload_by_index pa_context_remove_autoload_by_index_orig
#define pa_context_subscribe pa_context_subscribe_orig
#define pa_context_set_subscribe_callback pa_context_set_subscribe_callback_orig
#define pa_stream_connect_upload pa_stream_connect_upload_orig
#define pa_stream_finish_upload pa_stream_finish_upload_orig
#define pa_context_remove_sample pa_context_remove_sample_orig
#define pa_context_play_sample pa_context_play_sample_orig
#define pa_context_play_sample_with_proplist pa_context_play_sample_with_proplist_orig
#define pa_strerror pa_strerror_orig
#define pa_xmalloc pa_xmalloc_orig
#define pa_xmalloc0 pa_xmalloc0_orig
#define pa_xrealloc pa_xrealloc_orig
#define pa_xfree pa_xfree_orig
#define pa_xstrdup pa_xstrdup_orig
#define pa_xstrndup pa_xstrndup_orig
#define pa_xmemdup pa_xmemdup_orig
#define pa_utf8_valid pa_utf8_valid_orig
#define pa_ascii_valid pa_ascii_valid_orig
#define pa_utf8_filter pa_utf8_filter_orig
#define pa_ascii_filter pa_ascii_filter_orig
#define pa_utf8_to_locale pa_utf8_to_locale_orig
#define pa_locale_to_utf8 pa_locale_to_utf8_orig
#define pa_threaded_mainloop_new pa_threaded_mainloop_new_orig
#define pa_threaded_mainloop_free pa_threaded_mainloop_free_orig
#define pa_threaded_mainloop_start pa_threaded_mainloop_start_orig
#define pa_threaded_mainloop_stop pa_threaded_mainloop_stop_orig
#define pa_threaded_mainloop_lock pa_threaded_mainloop_lock_orig
#define pa_threaded_mainloop_unlock pa_threaded_mainloop_unlock_orig
#define pa_threaded_mainloop_wait pa_threaded_mainloop_wait_orig
#define pa_threaded_mainloop_signal pa_threaded_mainloop_signal_orig
#define pa_threaded_mainloop_accept pa_threaded_mainloop_accept_orig
#define pa_threaded_mainloop_get_retval pa_threaded_mainloop_get_retval_orig
#define pa_threaded_mainloop_get_api pa_threaded_mainloop_get_api_orig
#define pa_threaded_mainloop_in_thread pa_threaded_mainloop_in_thread_orig
#define pa_threaded_mainloop_set_name pa_threaded_mainloop_set_name_orig
#define pa_threaded_mainloop_once_unlocked pa_threaded_mainloop_once_unlocked_orig
#define pa_mainloop_new pa_mainloop_new_orig
#define pa_mainloop_free pa_mainloop_free_orig
#define pa_mainloop_prepare pa_mainloop_prepare_orig
#define pa_mainloop_poll pa_mainloop_poll_orig
#define pa_mainloop_dispatch pa_mainloop_dispatch_orig
#define pa_mainloop_get_retval pa_mainloop_get_retval_orig
#define pa_mainloop_iterate pa_mainloop_iterate_orig
#define pa_mainloop_run pa_mainloop_run_orig
#define pa_mainloop_get_api pa_mainloop_get_api_orig
#define pa_mainloop_quit pa_mainloop_quit_orig
#define pa_mainloop_wakeup pa_mainloop_wakeup_orig
#define pa_mainloop_set_poll_func pa_mainloop_set_poll_func_orig
#define pa_signal_init pa_signal_init_orig
#define pa_signal_done pa_signal_done_orig
#define pa_signal_new pa_signal_new_orig
#define pa_signal_free pa_signal_free_orig
#define pa_signal_set_destroy pa_signal_set_destroy_orig
#define pa_get_user_name pa_get_user_name_orig
#define pa_get_host_name pa_get_host_name_orig
#define pa_get_fqdn pa_get_fqdn_orig
#define pa_get_home_dir pa_get_home_dir_orig
#define pa_get_binary_name pa_get_binary_name_orig
#define pa_path_get_filename pa_path_get_filename_orig
#define pa_msleep pa_msleep_orig
#define pa_thread_make_realtime pa_thread_make_realtime_orig
#define pa_gettimeofday pa_gettimeofday_orig
#define pa_timeval_diff pa_timeval_diff_orig
#define pa_timeval_cmp pa_timeval_cmp_orig
#define pa_timeval_age pa_timeval_age_orig
#define pa_timeval_add pa_timeval_add_orig
#define pa_timeval_sub pa_timeval_sub_orig
#define pa_timeval_store pa_timeval_store_orig
#define pa_timeval_load pa_timeval_load_orig
#define pa_rtclock_now pa_rtclock_now_orig
#include <pulse/pulseaudio.h>
#undef pa_get_library_version
#undef pa_bytes_per_second
#undef pa_frame_size
#undef pa_sample_size
#undef pa_sample_size_of_format
#undef pa_bytes_to_usec
#undef pa_usec_to_bytes
#undef pa_sample_spec_init
#undef pa_sample_format_valid
#undef pa_sample_rate_valid
#undef pa_channels_valid
#undef pa_sample_spec_valid
#undef pa_sample_spec_equal
#undef pa_sample_format_to_string
#undef pa_parse_sample_format
#undef pa_sample_spec_snprint
#undef pa_bytes_snprint
#undef pa_sample_format_is_le
#undef pa_sample_format_is_be
#undef pa_direction_valid
#undef pa_direction_to_string
#undef pa_mainloop_api_once
#undef pa_proplist_new
#undef pa_proplist_free
#undef pa_proplist_key_valid
#undef pa_proplist_sets
#undef pa_proplist_setp
#undef pa_proplist_setf
#undef pa_proplist_set
#undef pa_proplist_gets
#undef pa_proplist_get
#undef pa_proplist_update
#undef pa_proplist_unset
#undef pa_proplist_unset_many
#undef pa_proplist_iterate
#undef pa_proplist_to_string
#undef pa_proplist_to_string_sep
#undef pa_proplist_from_string
#undef pa_proplist_contains
#undef pa_proplist_clear
#undef pa_proplist_copy
#undef pa_proplist_size
#undef pa_proplist_isempty
#undef pa_proplist_equal
#undef pa_channel_map_init
#undef pa_channel_map_init_mono
#undef pa_channel_map_init_stereo
#undef pa_channel_map_init_auto
#undef pa_channel_map_init_extend
#undef pa_channel_position_to_string
#undef pa_channel_position_from_string
#undef pa_channel_position_to_pretty_string
#undef pa_channel_map_snprint
#undef pa_channel_map_parse
#undef pa_channel_map_equal
#undef pa_channel_map_valid
#undef pa_channel_map_compatible
#undef pa_channel_map_superset
#undef pa_channel_map_can_balance
#undef pa_channel_map_can_fade
#undef pa_channel_map_can_lfe_balance
#undef pa_channel_map_to_name
#undef pa_channel_map_to_pretty_name
#undef pa_channel_map_has_position
#undef pa_channel_map_mask
#undef pa_encoding_to_string
#undef pa_encoding_from_string
#undef pa_format_info_new
#undef pa_format_info_copy
#undef pa_format_info_free
#undef pa_format_info_valid
#undef pa_format_info_is_pcm
#undef pa_format_info_is_compatible
#undef pa_format_info_snprint
#undef pa_format_info_from_string
#undef pa_format_info_from_sample_spec
#undef pa_format_info_to_sample_spec
#undef pa_format_info_get_prop_type
#undef pa_format_info_get_prop_int
#undef pa_format_info_get_prop_int_range
#undef pa_format_info_get_prop_int_array
#undef pa_format_info_get_prop_string
#undef pa_format_info_get_prop_string_array
#undef pa_format_info_free_string_array
#undef pa_format_info_get_sample_format
#undef pa_format_info_get_rate
#undef pa_format_info_get_channels
#undef pa_format_info_get_channel_map
#undef pa_format_info_set_prop_int
#undef pa_format_info_set_prop_int_array
#undef pa_format_info_set_prop_int_range
#undef pa_format_info_set_prop_string
#undef pa_format_info_set_prop_string_array
#undef pa_format_info_set_sample_format
#undef pa_format_info_set_rate
#undef pa_format_info_set_channels
#undef pa_format_info_set_channel_map
#undef pa_operation_ref
#undef pa_operation_unref
#undef pa_operation_cancel
#undef pa_operation_get_state
#undef pa_operation_set_state_callback
#undef pa_context_new
#undef pa_context_new_with_proplist
#undef pa_context_unref
#undef pa_context_ref
#undef pa_context_set_state_callback
#undef pa_context_set_event_callback
#undef pa_context_errno
#undef pa_context_is_pending
#undef pa_context_get_state
#undef pa_context_connect
#undef pa_context_disconnect
#undef pa_context_drain
#undef pa_context_exit_daemon
#undef pa_context_set_default_sink
#undef pa_context_set_default_source
#undef pa_context_is_local
#undef pa_context_set_name
#undef pa_context_get_server
#undef pa_context_get_protocol_version
#undef pa_context_get_server_protocol_version
#undef pa_context_proplist_update
#undef pa_context_proplist_remove
#undef pa_context_get_index
#undef pa_context_rttime_new
#undef pa_context_rttime_restart
#undef pa_context_get_tile_size
#undef pa_context_load_cookie_from_file
#undef pa_cvolume_equal
#undef pa_cvolume_init
#undef pa_cvolume_set
#undef pa_cvolume_snprint
#undef pa_sw_cvolume_snprint_dB
#undef pa_cvolume_snprint_verbose
#undef pa_volume_snprint
#undef pa_sw_volume_snprint_dB
#undef pa_volume_snprint_verbose
#undef pa_cvolume_avg
#undef pa_cvolume_avg_mask
#undef pa_cvolume_max
#undef pa_cvolume_max_mask
#undef pa_cvolume_min
#undef pa_cvolume_min_mask
#undef pa_cvolume_valid
#undef pa_cvolume_channels_equal_to
#undef pa_sw_volume_multiply
#undef pa_sw_cvolume_multiply
#undef pa_sw_cvolume_multiply_scalar
#undef pa_sw_volume_divide
#undef pa_sw_cvolume_divide
#undef pa_sw_cvolume_divide_scalar
#undef pa_sw_volume_from_dB
#undef pa_sw_volume_to_dB
#undef pa_sw_volume_from_linear
#undef pa_sw_volume_to_linear
#undef pa_cvolume_remap
#undef pa_cvolume_compatible
#undef pa_cvolume_compatible_with_channel_map
#undef pa_cvolume_get_balance
#undef pa_cvolume_set_balance
#undef pa_cvolume_get_fade
#undef pa_cvolume_set_fade
#undef pa_cvolume_get_lfe_balance
#undef pa_cvolume_set_lfe_balance
#undef pa_cvolume_scale
#undef pa_cvolume_scale_mask
#undef pa_cvolume_set_position
#undef pa_cvolume_get_position
#undef pa_cvolume_merge
#undef pa_cvolume_inc_clamp
#undef pa_cvolume_inc
#undef pa_cvolume_dec
#undef pa_stream_new
#undef pa_stream_new_with_proplist
#undef pa_stream_new_extended
#undef pa_stream_unref
#undef pa_stream_ref
#undef pa_stream_get_state
#undef pa_stream_get_context
#undef pa_stream_get_index
#undef pa_stream_get_device_index
#undef pa_stream_get_device_name
#undef pa_stream_is_suspended
#undef pa_stream_is_corked
#undef pa_stream_connect_playback
#undef pa_stream_connect_record
#undef pa_stream_disconnect
#undef pa_stream_begin_write
#undef pa_stream_cancel_write
#undef pa_stream_write
#undef pa_stream_write_ext_free
#undef pa_stream_peek
#undef pa_stream_drop
#undef pa_stream_writable_size
#undef pa_stream_readable_size
#undef pa_stream_drain
#undef pa_stream_update_timing_info
#undef pa_stream_set_state_callback
#undef pa_stream_set_write_callback
#undef pa_stream_set_read_callback
#undef pa_stream_set_overflow_callback
#undef pa_stream_get_underflow_index
#undef pa_stream_set_underflow_callback
#undef pa_stream_set_started_callback
#undef pa_stream_set_latency_update_callback
#undef pa_stream_set_moved_callback
#undef pa_stream_set_suspended_callback
#undef pa_stream_set_event_callback
#undef pa_stream_set_buffer_attr_callback
#undef pa_stream_cork
#undef pa_stream_flush
#undef pa_stream_prebuf
#undef pa_stream_trigger
#undef pa_stream_set_name
#undef pa_stream_get_time
#undef pa_stream_get_latency
#undef pa_stream_get_timing_info
#undef pa_stream_get_sample_spec
#undef pa_stream_get_channel_map
#undef pa_stream_get_format_info
#undef pa_stream_get_buffer_attr
#undef pa_stream_set_buffer_attr
#undef pa_stream_update_sample_rate
#undef pa_stream_proplist_update
#undef pa_stream_proplist_remove
#undef pa_stream_set_monitor_stream
#undef pa_stream_get_monitor_stream
#undef pa_context_get_sink_info_by_name
#undef pa_context_get_sink_info_by_index
#undef pa_context_get_sink_info_list
#undef pa_context_set_sink_volume_by_index
#undef pa_context_set_sink_volume_by_name
#undef pa_context_set_sink_mute_by_index
#undef pa_context_set_sink_mute_by_name
#undef pa_context_suspend_sink_by_name
#undef pa_context_suspend_sink_by_index
#undef pa_context_set_sink_port_by_index
#undef pa_context_set_sink_port_by_name
#undef pa_context_get_source_info_by_name
#undef pa_context_get_source_info_by_index
#undef pa_context_get_source_info_list
#undef pa_context_set_source_volume_by_index
#undef pa_context_set_source_volume_by_name
#undef pa_context_set_source_mute_by_index
#undef pa_context_set_source_mute_by_name
#undef pa_context_suspend_source_by_name
#undef pa_context_suspend_source_by_index
#undef pa_context_set_source_port_by_index
#undef pa_context_set_source_port_by_name
#undef pa_context_get_server_info
#undef pa_context_get_module_info
#undef pa_context_get_module_info_list
#undef pa_context_load_module
#undef pa_context_unload_module
#undef pa_context_get_client_info
#undef pa_context_get_client_info_list
#undef pa_context_kill_client
#undef pa_context_get_card_info_by_index
#undef pa_context_get_card_info_by_name
#undef pa_context_get_card_info_list
#undef pa_context_set_card_profile_by_index
#undef pa_context_set_card_profile_by_name
#undef pa_context_set_port_latency_offset
#undef pa_context_get_sink_input_info
#undef pa_context_get_sink_input_info_list
#undef pa_context_move_sink_input_by_name
#undef pa_context_move_sink_input_by_index
#undef pa_context_set_sink_input_volume
#undef pa_context_set_sink_input_mute
#undef pa_context_kill_sink_input
#undef pa_context_get_source_output_info
#undef pa_context_get_source_output_info_list
#undef pa_context_move_source_output_by_name
#undef pa_context_move_source_output_by_index
#undef pa_context_set_source_output_volume
#undef pa_context_set_source_output_mute
#undef pa_context_kill_source_output
#undef pa_context_stat
#undef pa_context_get_sample_info_by_name
#undef pa_context_get_sample_info_by_index
#undef pa_context_get_sample_info_list
#undef pa_context_get_autoload_info_by_name
#undef pa_context_get_autoload_info_by_index
#undef pa_context_get_autoload_info_list
#undef pa_context_add_autoload
#undef pa_context_remove_autoload_by_name
#undef pa_context_remove_autoload_by_index
#undef pa_context_subscribe
#undef pa_context_set_subscribe_callback
#undef pa_stream_connect_upload
#undef pa_stream_finish_upload
#undef pa_context_remove_sample
#undef pa_context_play_sample
#undef pa_context_play_sample_with_proplist
#undef pa_strerror
#undef pa_xmalloc
#undef pa_xmalloc0
#undef pa_xrealloc
#undef pa_xfree
#undef pa_xstrdup
#undef pa_xstrndup
#undef pa_xmemdup
#undef pa_utf8_valid
#undef pa_ascii_valid
#undef pa_utf8_filter
#undef pa_ascii_filter
#undef pa_utf8_to_locale
#undef pa_locale_to_utf8
#undef pa_threaded_mainloop_new
#undef pa_threaded_mainloop_free
#undef pa_threaded_mainloop_start
#undef pa_threaded_mainloop_stop
#undef pa_threaded_mainloop_lock
#undef pa_threaded_mainloop_unlock
#undef pa_threaded_mainloop_wait
#undef pa_threaded_mainloop_signal
#undef pa_threaded_mainloop_accept
#undef pa_threaded_mainloop_get_retval
#undef pa_threaded_mainloop_get_api
#undef pa_threaded_mainloop_in_thread
#undef pa_threaded_mainloop_set_name
#undef pa_threaded_mainloop_once_unlocked
#undef pa_mainloop_new
#undef pa_mainloop_free
#undef pa_mainloop_prepare
#undef pa_mainloop_poll
#undef pa_mainloop_dispatch
#undef pa_mainloop_get_retval
#undef pa_mainloop_iterate
#undef pa_mainloop_run
#undef pa_mainloop_get_api
#undef pa_mainloop_quit
#undef pa_mainloop_wakeup
#undef pa_mainloop_set_poll_func
#undef pa_signal_init
#undef pa_signal_done
#undef pa_signal_new
#undef pa_signal_free
#undef pa_signal_set_destroy
#undef pa_get_user_name
#undef pa_get_host_name
#undef pa_get_fqdn
#undef pa_get_home_dir
#undef pa_get_binary_name
#undef pa_path_get_filename
#undef pa_msleep
#undef pa_thread_make_realtime
#undef pa_gettimeofday
#undef pa_timeval_diff
#undef pa_timeval_cmp
#undef pa_timeval_age
#undef pa_timeval_add
#undef pa_timeval_sub
#undef pa_timeval_store
#undef pa_timeval_load
#undef pa_rtclock_now
#ifdef __cplusplus
extern "C" {
#endif
extern const char* (*pa_get_library_version)( void);
extern size_t (*pa_bytes_per_second)(const pa_sample_spec*);
extern size_t (*pa_frame_size)(const pa_sample_spec*);
extern size_t (*pa_sample_size)(const pa_sample_spec*);
extern size_t (*pa_sample_size_of_format)( pa_sample_format_t);
extern pa_usec_t (*pa_bytes_to_usec)( uint64_t,const pa_sample_spec*);
extern size_t (*pa_usec_to_bytes)( pa_usec_t,const pa_sample_spec*);
extern pa_sample_spec* (*pa_sample_spec_init)( pa_sample_spec*);
extern int (*pa_sample_format_valid)( unsigned);
extern int (*pa_sample_rate_valid)( uint32_t);
extern int (*pa_channels_valid)( uint8_t);
extern int (*pa_sample_spec_valid)(const pa_sample_spec*);
extern int (*pa_sample_spec_equal)(const pa_sample_spec*,const pa_sample_spec*);
extern const char* (*pa_sample_format_to_string)( pa_sample_format_t);
extern pa_sample_format_t (*pa_parse_sample_format)(const char*);
extern char* (*pa_sample_spec_snprint)( char*, size_t,const pa_sample_spec*);
extern char* (*pa_bytes_snprint)( char*, size_t, unsigned);
extern int (*pa_sample_format_is_le)( pa_sample_format_t);
extern int (*pa_sample_format_is_be)( pa_sample_format_t);
extern int (*pa_direction_valid)( pa_direction_t);
extern const char* (*pa_direction_to_string)( pa_direction_t);
extern void (*pa_mainloop_api_once)( pa_mainloop_api*, void*, void*);
extern pa_proplist* (*pa_proplist_new)( void);
extern void (*pa_proplist_free)( pa_proplist*);
extern int (*pa_proplist_key_valid)(const char*);
extern int (*pa_proplist_sets)( pa_proplist*,const char*,const char*);
extern int (*pa_proplist_setp)( pa_proplist*,const char*);
extern int (*pa_proplist_setf)( pa_proplist*,const char*,const char*,...);
extern int (*pa_proplist_set)( pa_proplist*,const char*,const void*, size_t);
extern const char* (*pa_proplist_gets)(const pa_proplist*,const char*);
extern int (*pa_proplist_get)(const pa_proplist*,const char*,const void**, size_t*);
extern void (*pa_proplist_update)( pa_proplist*, pa_update_mode_t,const pa_proplist*);
extern int (*pa_proplist_unset)( pa_proplist*,const char*);
extern int (*pa_proplist_unset_many)( pa_proplist*,const char* []);
extern const char* (*pa_proplist_iterate)(const pa_proplist*, void**);
extern char* (*pa_proplist_to_string)(const pa_proplist*);
extern char* (*pa_proplist_to_string_sep)(const pa_proplist*,const char*);
extern pa_proplist* (*pa_proplist_from_string)(const char*);
extern int (*pa_proplist_contains)(const pa_proplist*,const char*);
extern void (*pa_proplist_clear)( pa_proplist*);
extern pa_proplist* (*pa_proplist_copy)(const pa_proplist*);
extern unsigned (*pa_proplist_size)(const pa_proplist*);
extern int (*pa_proplist_isempty)(const pa_proplist*);
extern int (*pa_proplist_equal)(const pa_proplist*,const pa_proplist*);
extern pa_channel_map* (*pa_channel_map_init)( pa_channel_map*);
extern pa_channel_map* (*pa_channel_map_init_mono)( pa_channel_map*);
extern pa_channel_map* (*pa_channel_map_init_stereo)( pa_channel_map*);
extern pa_channel_map* (*pa_channel_map_init_auto)( pa_channel_map*, unsigned, pa_channel_map_def_t);
extern pa_channel_map* (*pa_channel_map_init_extend)( pa_channel_map*, unsigned, pa_channel_map_def_t);
extern const char* (*pa_channel_position_to_string)( pa_channel_position_t);
extern pa_channel_position_t (*pa_channel_position_from_string)(const char*);
extern const char* (*pa_channel_position_to_pretty_string)( pa_channel_position_t);
extern char* (*pa_channel_map_snprint)( char*, size_t,const pa_channel_map*);
extern pa_channel_map* (*pa_channel_map_parse)( pa_channel_map*,const char*);
extern int (*pa_channel_map_equal)(const pa_channel_map*,const pa_channel_map*);
extern int (*pa_channel_map_valid)(const pa_channel_map*);
extern int (*pa_channel_map_compatible)(const pa_channel_map*,const pa_sample_spec*);
extern int (*pa_channel_map_superset)(const pa_channel_map*,const pa_channel_map*);
extern int (*pa_channel_map_can_balance)(const pa_channel_map*);
extern int (*pa_channel_map_can_fade)(const pa_channel_map*);
extern int (*pa_channel_map_can_lfe_balance)(const pa_channel_map*);
extern const char* (*pa_channel_map_to_name)(const pa_channel_map*);
extern const char* (*pa_channel_map_to_pretty_name)(const pa_channel_map*);
extern int (*pa_channel_map_has_position)(const pa_channel_map*, pa_channel_position_t);
extern pa_channel_position_mask_t (*pa_channel_map_mask)(const pa_channel_map*);
extern const char* (*pa_encoding_to_string)( pa_encoding_t);
extern pa_encoding_t (*pa_encoding_from_string)(const char*);
extern pa_format_info* (*pa_format_info_new)( void);
extern pa_format_info* (*pa_format_info_copy)(const pa_format_info*);
extern void (*pa_format_info_free)( pa_format_info*);
extern int (*pa_format_info_valid)(const pa_format_info*);
extern int (*pa_format_info_is_pcm)(const pa_format_info*);
extern int (*pa_format_info_is_compatible)(const pa_format_info*,const pa_format_info*);
extern char* (*pa_format_info_snprint)( char*, size_t,const pa_format_info*);
extern pa_format_info* (*pa_format_info_from_string)(const char*);
extern pa_format_info* (*pa_format_info_from_sample_spec)(const pa_sample_spec*,const pa_channel_map*);
extern int (*pa_format_info_to_sample_spec)(const pa_format_info*, pa_sample_spec*, pa_channel_map*);
extern pa_prop_type_t (*pa_format_info_get_prop_type)(const pa_format_info*,const char*);
extern int (*pa_format_info_get_prop_int)(const pa_format_info*,const char*, int*);
extern int (*pa_format_info_get_prop_int_range)(const pa_format_info*,const char*, int*, int*);
extern int (*pa_format_info_get_prop_int_array)(const pa_format_info*,const char*, int**, int*);
extern int (*pa_format_info_get_prop_string)(const pa_format_info*,const char*, char**);
extern int (*pa_format_info_get_prop_string_array)(const pa_format_info*,const char*, char***, int*);
extern void (*pa_format_info_free_string_array)( char**, int);
extern int (*pa_format_info_get_sample_format)(const pa_format_info*, pa_sample_format_t*);
extern int (*pa_format_info_get_rate)(const pa_format_info*, uint32_t*);
extern int (*pa_format_info_get_channels)(const pa_format_info*, uint8_t*);
extern int (*pa_format_info_get_channel_map)(const pa_format_info*, pa_channel_map*);
extern void (*pa_format_info_set_prop_int)( pa_format_info*,const char*, int);
extern void (*pa_format_info_set_prop_int_array)( pa_format_info*,const char*,const int*, int);
extern void (*pa_format_info_set_prop_int_range)( pa_format_info*,const char*, int, int);
extern void (*pa_format_info_set_prop_string)( pa_format_info*,const char*,const char*);
extern void (*pa_format_info_set_prop_string_array)( pa_format_info*,const char*,const char**, int);
extern void (*pa_format_info_set_sample_format)( pa_format_info*, pa_sample_format_t);
extern void (*pa_format_info_set_rate)( pa_format_info*, int);
extern void (*pa_format_info_set_channels)( pa_format_info*, int);
extern void (*pa_format_info_set_channel_map)( pa_format_info*,const pa_channel_map*);
extern pa_operation* (*pa_operation_ref)( pa_operation*);
extern void (*pa_operation_unref)( pa_operation*);
extern void (*pa_operation_cancel)( pa_operation*);
extern pa_operation_state_t (*pa_operation_get_state)(const pa_operation*);
extern void (*pa_operation_set_state_callback)( pa_operation*, pa_operation_notify_cb_t, void*);
extern pa_context* (*pa_context_new)( pa_mainloop_api*,const char*);
extern pa_context* (*pa_context_new_with_proplist)( pa_mainloop_api*,const char*,const pa_proplist*);
extern void (*pa_context_unref)( pa_context*);
extern pa_context* (*pa_context_ref)( pa_context*);
extern void (*pa_context_set_state_callback)( pa_context*, pa_context_notify_cb_t, void*);
extern void (*pa_context_set_event_callback)( pa_context*, pa_context_event_cb_t, void*);
extern int (*pa_context_errno)(const pa_context*);
extern int (*pa_context_is_pending)(const pa_context*);
extern pa_context_state_t (*pa_context_get_state)(const pa_context*);
extern int (*pa_context_connect)( pa_context*,const char*, pa_context_flags_t,const pa_spawn_api*);
extern void (*pa_context_disconnect)( pa_context*);
extern pa_operation* (*pa_context_drain)( pa_context*, pa_context_notify_cb_t, void*);
extern pa_operation* (*pa_context_exit_daemon)( pa_context*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_default_sink)( pa_context*,const char*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_default_source)( pa_context*,const char*, pa_context_success_cb_t, void*);
extern int (*pa_context_is_local)(const pa_context*);
extern pa_operation* (*pa_context_set_name)( pa_context*,const char*, pa_context_success_cb_t, void*);
extern const char* (*pa_context_get_server)(const pa_context*);
extern uint32_t (*pa_context_get_protocol_version)(const pa_context*);
extern uint32_t (*pa_context_get_server_protocol_version)(const pa_context*);
extern pa_operation* (*pa_context_proplist_update)( pa_context*, pa_update_mode_t,const pa_proplist*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_proplist_remove)( pa_context*,const char* [], pa_context_success_cb_t, void*);
extern uint32_t (*pa_context_get_index)(const pa_context*);
extern pa_time_event* (*pa_context_rttime_new)(const pa_context*, pa_usec_t, pa_time_event_cb_t, void*);
extern void (*pa_context_rttime_restart)(const pa_context*, pa_time_event*, pa_usec_t);
extern size_t (*pa_context_get_tile_size)(const pa_context*,const pa_sample_spec*);
extern int (*pa_context_load_cookie_from_file)( pa_context*,const char*);
extern int (*pa_cvolume_equal)(const pa_cvolume*,const pa_cvolume*);
extern pa_cvolume* (*pa_cvolume_init)( pa_cvolume*);
extern pa_cvolume* (*pa_cvolume_set)( pa_cvolume*, unsigned, pa_volume_t);
extern char* (*pa_cvolume_snprint)( char*, size_t,const pa_cvolume*);
extern char* (*pa_sw_cvolume_snprint_dB)( char*, size_t,const pa_cvolume*);
extern char* (*pa_cvolume_snprint_verbose)( char*, size_t,const pa_cvolume*,const pa_channel_map*, int);
extern char* (*pa_volume_snprint)( char*, size_t, pa_volume_t);
extern char* (*pa_sw_volume_snprint_dB)( char*, size_t, pa_volume_t);
extern char* (*pa_volume_snprint_verbose)( char*, size_t, pa_volume_t, int);
extern pa_volume_t (*pa_cvolume_avg)(const pa_cvolume*);
extern pa_volume_t (*pa_cvolume_avg_mask)(const pa_cvolume*,const pa_channel_map*, pa_channel_position_mask_t);
extern pa_volume_t (*pa_cvolume_max)(const pa_cvolume*);
extern pa_volume_t (*pa_cvolume_max_mask)(const pa_cvolume*,const pa_channel_map*, pa_channel_position_mask_t);
extern pa_volume_t (*pa_cvolume_min)(const pa_cvolume*);
extern pa_volume_t (*pa_cvolume_min_mask)(const pa_cvolume*,const pa_channel_map*, pa_channel_position_mask_t);
extern int (*pa_cvolume_valid)(const pa_cvolume*);
extern int (*pa_cvolume_channels_equal_to)(const pa_cvolume*, pa_volume_t);
extern pa_volume_t (*pa_sw_volume_multiply)( pa_volume_t, pa_volume_t);
extern pa_cvolume* (*pa_sw_cvolume_multiply)( pa_cvolume*,const pa_cvolume*,const pa_cvolume*);
extern pa_cvolume* (*pa_sw_cvolume_multiply_scalar)( pa_cvolume*,const pa_cvolume*, pa_volume_t);
extern pa_volume_t (*pa_sw_volume_divide)( pa_volume_t, pa_volume_t);
extern pa_cvolume* (*pa_sw_cvolume_divide)( pa_cvolume*,const pa_cvolume*,const pa_cvolume*);
extern pa_cvolume* (*pa_sw_cvolume_divide_scalar)( pa_cvolume*,const pa_cvolume*, pa_volume_t);
extern pa_volume_t (*pa_sw_volume_from_dB)( double);
extern double (*pa_sw_volume_to_dB)( pa_volume_t);
extern pa_volume_t (*pa_sw_volume_from_linear)( double);
extern double (*pa_sw_volume_to_linear)( pa_volume_t);
extern pa_cvolume* (*pa_cvolume_remap)( pa_cvolume*,const pa_channel_map*,const pa_channel_map*);
extern int (*pa_cvolume_compatible)(const pa_cvolume*,const pa_sample_spec*);
extern int (*pa_cvolume_compatible_with_channel_map)(const pa_cvolume*,const pa_channel_map*);
extern float (*pa_cvolume_get_balance)(const pa_cvolume*,const pa_channel_map*);
extern pa_cvolume* (*pa_cvolume_set_balance)( pa_cvolume*,const pa_channel_map*, float);
extern float (*pa_cvolume_get_fade)(const pa_cvolume*,const pa_channel_map*);
extern pa_cvolume* (*pa_cvolume_set_fade)( pa_cvolume*,const pa_channel_map*, float);
extern float (*pa_cvolume_get_lfe_balance)(const pa_cvolume*,const pa_channel_map*);
extern pa_cvolume* (*pa_cvolume_set_lfe_balance)( pa_cvolume*,const pa_channel_map*, float);
extern pa_cvolume* (*pa_cvolume_scale)( pa_cvolume*, pa_volume_t);
extern pa_cvolume* (*pa_cvolume_scale_mask)( pa_cvolume*, pa_volume_t,const pa_channel_map*, pa_channel_position_mask_t);
extern pa_cvolume* (*pa_cvolume_set_position)( pa_cvolume*,const pa_channel_map*, pa_channel_position_t, pa_volume_t);
extern pa_volume_t (*pa_cvolume_get_position)(const pa_cvolume*,const pa_channel_map*, pa_channel_position_t);
extern pa_cvolume* (*pa_cvolume_merge)( pa_cvolume*,const pa_cvolume*,const pa_cvolume*);
extern pa_cvolume* (*pa_cvolume_inc_clamp)( pa_cvolume*, pa_volume_t, pa_volume_t);
extern pa_cvolume* (*pa_cvolume_inc)( pa_cvolume*, pa_volume_t);
extern pa_cvolume* (*pa_cvolume_dec)( pa_cvolume*, pa_volume_t);
extern pa_stream* (*pa_stream_new)( pa_context*,const char*,const pa_sample_spec*,const pa_channel_map*);
extern pa_stream* (*pa_stream_new_with_proplist)( pa_context*,const char*,const pa_sample_spec*,const pa_channel_map*, pa_proplist*);
extern pa_stream* (*pa_stream_new_extended)( pa_context*,const char*, pa_format_info**, unsigned int, pa_proplist*);
extern void (*pa_stream_unref)( pa_stream*);
extern pa_stream* (*pa_stream_ref)( pa_stream*);
extern pa_stream_state_t (*pa_stream_get_state)(const pa_stream*);
extern pa_context* (*pa_stream_get_context)(const pa_stream*);
extern uint32_t (*pa_stream_get_index)(const pa_stream*);
extern uint32_t (*pa_stream_get_device_index)(const pa_stream*);
extern const char* (*pa_stream_get_device_name)(const pa_stream*);
extern int (*pa_stream_is_suspended)(const pa_stream*);
extern int (*pa_stream_is_corked)(const pa_stream*);
extern int (*pa_stream_connect_playback)( pa_stream*,const char*,const pa_buffer_attr*, pa_stream_flags_t,const pa_cvolume*, pa_stream*);
extern int (*pa_stream_connect_record)( pa_stream*,const char*,const pa_buffer_attr*, pa_stream_flags_t);
extern int (*pa_stream_disconnect)( pa_stream*);
extern int (*pa_stream_begin_write)( pa_stream*, void**, size_t*);
extern int (*pa_stream_cancel_write)( pa_stream*);
extern int (*pa_stream_write)( pa_stream*,const void*, size_t, pa_free_cb_t, int64_t, pa_seek_mode_t);
extern int (*pa_stream_write_ext_free)( pa_stream*,const void*, size_t, pa_free_cb_t, void*, int64_t, pa_seek_mode_t);
extern int (*pa_stream_peek)( pa_stream*,const void**, size_t*);
extern int (*pa_stream_drop)( pa_stream*);
extern size_t (*pa_stream_writable_size)(const pa_stream*);
extern size_t (*pa_stream_readable_size)(const pa_stream*);
extern pa_operation* (*pa_stream_drain)( pa_stream*, pa_stream_success_cb_t, void*);
extern pa_operation* (*pa_stream_update_timing_info)( pa_stream*, pa_stream_success_cb_t, void*);
extern void (*pa_stream_set_state_callback)( pa_stream*, pa_stream_notify_cb_t, void*);
extern void (*pa_stream_set_write_callback)( pa_stream*, pa_stream_request_cb_t, void*);
extern void (*pa_stream_set_read_callback)( pa_stream*, pa_stream_request_cb_t, void*);
extern void (*pa_stream_set_overflow_callback)( pa_stream*, pa_stream_notify_cb_t, void*);
extern int64_t (*pa_stream_get_underflow_index)(const pa_stream*);
extern void (*pa_stream_set_underflow_callback)( pa_stream*, pa_stream_notify_cb_t, void*);
extern void (*pa_stream_set_started_callback)( pa_stream*, pa_stream_notify_cb_t, void*);
extern void (*pa_stream_set_latency_update_callback)( pa_stream*, pa_stream_notify_cb_t, void*);
extern void (*pa_stream_set_moved_callback)( pa_stream*, pa_stream_notify_cb_t, void*);
extern void (*pa_stream_set_suspended_callback)( pa_stream*, pa_stream_notify_cb_t, void*);
extern void (*pa_stream_set_event_callback)( pa_stream*, pa_stream_event_cb_t, void*);
extern void (*pa_stream_set_buffer_attr_callback)( pa_stream*, pa_stream_notify_cb_t, void*);
extern pa_operation* (*pa_stream_cork)( pa_stream*, int, pa_stream_success_cb_t, void*);
extern pa_operation* (*pa_stream_flush)( pa_stream*, pa_stream_success_cb_t, void*);
extern pa_operation* (*pa_stream_prebuf)( pa_stream*, pa_stream_success_cb_t, void*);
extern pa_operation* (*pa_stream_trigger)( pa_stream*, pa_stream_success_cb_t, void*);
extern pa_operation* (*pa_stream_set_name)( pa_stream*,const char*, pa_stream_success_cb_t, void*);
extern int (*pa_stream_get_time)( pa_stream*, pa_usec_t*);
extern int (*pa_stream_get_latency)( pa_stream*, pa_usec_t*, int*);
extern const pa_timing_info* (*pa_stream_get_timing_info)( pa_stream*);
extern const pa_sample_spec* (*pa_stream_get_sample_spec)( pa_stream*);
extern const pa_channel_map* (*pa_stream_get_channel_map)( pa_stream*);
extern const pa_format_info* (*pa_stream_get_format_info)(const pa_stream*);
extern const pa_buffer_attr* (*pa_stream_get_buffer_attr)( pa_stream*);
extern pa_operation* (*pa_stream_set_buffer_attr)( pa_stream*,const pa_buffer_attr*, pa_stream_success_cb_t, void*);
extern pa_operation* (*pa_stream_update_sample_rate)( pa_stream*, uint32_t, pa_stream_success_cb_t, void*);
extern pa_operation* (*pa_stream_proplist_update)( pa_stream*, pa_update_mode_t, pa_proplist*, pa_stream_success_cb_t, void*);
extern pa_operation* (*pa_stream_proplist_remove)( pa_stream*,const char* [], pa_stream_success_cb_t, void*);
extern int (*pa_stream_set_monitor_stream)( pa_stream*, uint32_t);
extern uint32_t (*pa_stream_get_monitor_stream)(const pa_stream*);
extern pa_operation* (*pa_context_get_sink_info_by_name)( pa_context*,const char*, pa_sink_info_cb_t, void*);
extern pa_operation* (*pa_context_get_sink_info_by_index)( pa_context*, uint32_t, pa_sink_info_cb_t, void*);
extern pa_operation* (*pa_context_get_sink_info_list)( pa_context*, pa_sink_info_cb_t, void*);
extern pa_operation* (*pa_context_set_sink_volume_by_index)( pa_context*, uint32_t,const pa_cvolume*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_sink_volume_by_name)( pa_context*,const char*,const pa_cvolume*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_sink_mute_by_index)( pa_context*, uint32_t, int, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_sink_mute_by_name)( pa_context*,const char*, int, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_suspend_sink_by_name)( pa_context*,const char*, int, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_suspend_sink_by_index)( pa_context*, uint32_t, int, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_sink_port_by_index)( pa_context*, uint32_t,const char*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_sink_port_by_name)( pa_context*,const char*,const char*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_get_source_info_by_name)( pa_context*,const char*, pa_source_info_cb_t, void*);
extern pa_operation* (*pa_context_get_source_info_by_index)( pa_context*, uint32_t, pa_source_info_cb_t, void*);
extern pa_operation* (*pa_context_get_source_info_list)( pa_context*, pa_source_info_cb_t, void*);
extern pa_operation* (*pa_context_set_source_volume_by_index)( pa_context*, uint32_t,const pa_cvolume*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_source_volume_by_name)( pa_context*,const char*,const pa_cvolume*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_source_mute_by_index)( pa_context*, uint32_t, int, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_source_mute_by_name)( pa_context*,const char*, int, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_suspend_source_by_name)( pa_context*,const char*, int, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_suspend_source_by_index)( pa_context*, uint32_t, int, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_source_port_by_index)( pa_context*, uint32_t,const char*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_source_port_by_name)( pa_context*,const char*,const char*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_get_server_info)( pa_context*, pa_server_info_cb_t, void*);
extern pa_operation* (*pa_context_get_module_info)( pa_context*, uint32_t, pa_module_info_cb_t, void*);
extern pa_operation* (*pa_context_get_module_info_list)( pa_context*, pa_module_info_cb_t, void*);
extern pa_operation* (*pa_context_load_module)( pa_context*,const char*,const char*, pa_context_index_cb_t, void*);
extern pa_operation* (*pa_context_unload_module)( pa_context*, uint32_t, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_get_client_info)( pa_context*, uint32_t, pa_client_info_cb_t, void*);
extern pa_operation* (*pa_context_get_client_info_list)( pa_context*, pa_client_info_cb_t, void*);
extern pa_operation* (*pa_context_kill_client)( pa_context*, uint32_t, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_get_card_info_by_index)( pa_context*, uint32_t, pa_card_info_cb_t, void*);
extern pa_operation* (*pa_context_get_card_info_by_name)( pa_context*,const char*, pa_card_info_cb_t, void*);
extern pa_operation* (*pa_context_get_card_info_list)( pa_context*, pa_card_info_cb_t, void*);
extern pa_operation* (*pa_context_set_card_profile_by_index)( pa_context*, uint32_t,const char*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_card_profile_by_name)( pa_context*,const char*,const char*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_port_latency_offset)( pa_context*,const char*,const char*, int64_t, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_get_sink_input_info)( pa_context*, uint32_t, pa_sink_input_info_cb_t, void*);
extern pa_operation* (*pa_context_get_sink_input_info_list)( pa_context*, pa_sink_input_info_cb_t, void*);
extern pa_operation* (*pa_context_move_sink_input_by_name)( pa_context*, uint32_t,const char*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_move_sink_input_by_index)( pa_context*, uint32_t, uint32_t, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_sink_input_volume)( pa_context*, uint32_t,const pa_cvolume*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_sink_input_mute)( pa_context*, uint32_t, int, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_kill_sink_input)( pa_context*, uint32_t, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_get_source_output_info)( pa_context*, uint32_t, pa_source_output_info_cb_t, void*);
extern pa_operation* (*pa_context_get_source_output_info_list)( pa_context*, pa_source_output_info_cb_t, void*);
extern pa_operation* (*pa_context_move_source_output_by_name)( pa_context*, uint32_t,const char*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_move_source_output_by_index)( pa_context*, uint32_t, uint32_t, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_source_output_volume)( pa_context*, uint32_t,const pa_cvolume*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_set_source_output_mute)( pa_context*, uint32_t, int, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_kill_source_output)( pa_context*, uint32_t, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_stat)( pa_context*, pa_stat_info_cb_t, void*);
extern pa_operation* (*pa_context_get_sample_info_by_name)( pa_context*,const char*, pa_sample_info_cb_t, void*);
extern pa_operation* (*pa_context_get_sample_info_by_index)( pa_context*, uint32_t, pa_sample_info_cb_t, void*);
extern pa_operation* (*pa_context_get_sample_info_list)( pa_context*, pa_sample_info_cb_t, void*);
extern pa_operation* (*pa_context_get_autoload_info_by_name)( pa_context*,const char*, pa_autoload_type_t, pa_autoload_info_cb_t, void*);
extern pa_operation* (*pa_context_get_autoload_info_by_index)( pa_context*, uint32_t, pa_autoload_info_cb_t, void*);
extern pa_operation* (*pa_context_get_autoload_info_list)( pa_context*, pa_autoload_info_cb_t, void*);
extern pa_operation* (*pa_context_add_autoload)( pa_context*,const char*, pa_autoload_type_t,const char*,const char*, pa_context_index_cb_t, void*);
extern pa_operation* (*pa_context_remove_autoload_by_name)( pa_context*,const char*, pa_autoload_type_t, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_remove_autoload_by_index)( pa_context*, uint32_t, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_subscribe)( pa_context*, pa_subscription_mask_t, pa_context_success_cb_t, void*);
extern void (*pa_context_set_subscribe_callback)( pa_context*, pa_context_subscribe_cb_t, void*);
extern int (*pa_stream_connect_upload)( pa_stream*, size_t);
extern int (*pa_stream_finish_upload)( pa_stream*);
extern pa_operation* (*pa_context_remove_sample)( pa_context*,const char*, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_play_sample)( pa_context*,const char*,const char*, pa_volume_t, pa_context_success_cb_t, void*);
extern pa_operation* (*pa_context_play_sample_with_proplist)( pa_context*,const char*,const char*, pa_volume_t,const pa_proplist*, pa_context_play_sample_cb_t, void*);
extern const char* (*pa_strerror)( int);
extern void* (*pa_xmalloc)( size_t);
extern void* (*pa_xmalloc0)( size_t);
extern void* (*pa_xrealloc)( void*, size_t);
extern void (*pa_xfree)( void*);
extern char* (*pa_xstrdup)(const char*);
extern char* (*pa_xstrndup)(const char*, size_t);
extern void* (*pa_xmemdup)(const void*, size_t);
extern char* (*pa_utf8_valid)(const char*);
extern char* (*pa_ascii_valid)(const char*);
extern char* (*pa_utf8_filter)(const char*);
extern char* (*pa_ascii_filter)(const char*);
extern char* (*pa_utf8_to_locale)(const char*);
extern char* (*pa_locale_to_utf8)(const char*);
extern pa_threaded_mainloop* (*pa_threaded_mainloop_new)( void);
extern void (*pa_threaded_mainloop_free)( pa_threaded_mainloop*);
extern int (*pa_threaded_mainloop_start)( pa_threaded_mainloop*);
extern void (*pa_threaded_mainloop_stop)( pa_threaded_mainloop*);
extern void (*pa_threaded_mainloop_lock)( pa_threaded_mainloop*);
extern void (*pa_threaded_mainloop_unlock)( pa_threaded_mainloop*);
extern void (*pa_threaded_mainloop_wait)( pa_threaded_mainloop*);
extern void (*pa_threaded_mainloop_signal)( pa_threaded_mainloop*, int);
extern void (*pa_threaded_mainloop_accept)( pa_threaded_mainloop*);
extern int (*pa_threaded_mainloop_get_retval)(const pa_threaded_mainloop*);
extern pa_mainloop_api* (*pa_threaded_mainloop_get_api)( pa_threaded_mainloop*);
extern int (*pa_threaded_mainloop_in_thread)( pa_threaded_mainloop*);
extern void (*pa_threaded_mainloop_set_name)( pa_threaded_mainloop*,const char*);
extern void (*pa_threaded_mainloop_once_unlocked)( pa_threaded_mainloop*, void*, void*);
extern pa_mainloop* (*pa_mainloop_new)( void);
extern void (*pa_mainloop_free)( pa_mainloop*);
extern int (*pa_mainloop_prepare)( pa_mainloop*, int);
extern int (*pa_mainloop_poll)( pa_mainloop*);
extern int (*pa_mainloop_dispatch)( pa_mainloop*);
extern int (*pa_mainloop_get_retval)(const pa_mainloop*);
extern int (*pa_mainloop_iterate)( pa_mainloop*, int, int*);
extern int (*pa_mainloop_run)( pa_mainloop*, int*);
extern pa_mainloop_api* (*pa_mainloop_get_api)( pa_mainloop*);
extern void (*pa_mainloop_quit)( pa_mainloop*, int);
extern void (*pa_mainloop_wakeup)( pa_mainloop*);
extern void (*pa_mainloop_set_poll_func)( pa_mainloop*, pa_poll_func, void*);
extern int (*pa_signal_init)( pa_mainloop_api*);
extern void (*pa_signal_done)( void);
extern pa_signal_event* (*pa_signal_new)( int, pa_signal_cb_t, void*);
extern void (*pa_signal_free)( pa_signal_event*);
extern void (*pa_signal_set_destroy)( pa_signal_event*, pa_signal_destroy_cb_t);
extern char* (*pa_get_user_name)( char*, size_t);
extern char* (*pa_get_host_name)( char*, size_t);
extern char* (*pa_get_fqdn)( char*, size_t);
extern char* (*pa_get_home_dir)( char*, size_t);
extern char* (*pa_get_binary_name)( char*, size_t);
extern char* (*pa_path_get_filename)(const char*);
extern int (*pa_msleep)( unsigned long);
extern int (*pa_thread_make_realtime)( int);
extern struct timeval* (*pa_gettimeofday)(struct timeval*);
extern pa_usec_t (*pa_timeval_diff)(struct timeval*,struct timeval*);
extern int (*pa_timeval_cmp)(struct timeval*,struct timeval*);
extern pa_usec_t (*pa_timeval_age)(struct timeval*);
extern struct timeval* (*pa_timeval_add)(struct timeval*, pa_usec_t);
extern struct timeval* (*pa_timeval_sub)(struct timeval*, pa_usec_t);
extern struct timeval* (*pa_timeval_store)(struct timeval*, pa_usec_t);
extern pa_usec_t (*pa_timeval_load)(struct timeval*);
extern pa_usec_t (*pa_rtclock_now)( void);
int initialize_pulse();
#ifdef __cplusplus
}
#endif
